package com.heavenscode.rac.domain;

import java.util.Random;
import java.util.UUID;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;

public class CustomerTestSamples {

    private static final Random random = new Random();
    private static final AtomicLong longCount = new AtomicLong(random.nextInt() + (2 * Integer.MAX_VALUE));
    private static final AtomicInteger intCount = new AtomicInteger(random.nextInt() + (2 * Short.MAX_VALUE));

    public static Customer getCustomerSample1() {
        return new Customer()
            .id(1L)
            .customertype(1)
            .code("code1")
            .title("title1")
            .namewithinitials("namewithinitials1")
            .fullname("fullname1")
            .callingname("callingname1")
            .nicno("nicno1")
            .bloodgroup("bloodgroup1")
            .gender("gender1")
            .maritalstatus("maritalstatus1")
            .nationality(1)
            .territory("territory1")
            .religion(1)
            .team("team1")
            .businessname("businessname1")
            .businessregno("businessregno1")
            .profilepicturepath("profilepicturepath1")
            .residencehouseno("residencehouseno1")
            .residenceaddress("residenceaddress1")
            .residencecity("residencecity1")
            .residencephone("residencephone1")
            .businesslocationno("businesslocationno1")
            .businessaddress("businessaddress1")
            .businesscity("businesscity1")
            .businessphone1("businessphone11")
            .businessphone2("businessphone21")
            .businessmobile("businessmobile1")
            .businessfax("businessfax1")
            .businessemail("businessemail1")
            .businessprovinceid(1)
            .businessdistrictid(1)
            .contactpersonname("contactpersonname1")
            .contactpersonphone("contactpersonphone1")
            .contactpersonmobile("contactpersonmobile1")
            .contactpersonemail("contactpersonemail1")
            .rootmappath("rootmappath1")
            .website("website1")
            .isactive(1)
            .isinternalcustomer(1)
            .description("description1")
            .lmu(1)
            .creditpaymentbydays(1)
            .customerrootmappath("customerrootmappath1")
            .employername("employername1")
            .employeraddress("employeraddress1")
            .employerphone("employerphone1")
            .employerdesignation("employerdesignation1")
            .previousemployername("previousemployername1")
            .previousemployeraddress("previousemployeraddress1")
            .previousindustry("previousindustry1")
            .previousperiod("previousperiod1")
            .previouspositions("previouspositions1")
            .previousresionforleaving("previousresionforleaving1")
            .accountid(1)
            .accountcode("accountcode1")
            .vatregnumber("vatregnumber1")
            .tinnumber("tinnumber1")
            .lat("lat1")
            .lon("lon1")
            .creditperiod(1);
    }

    public static Customer getCustomerSample2() {
        return new Customer()
            .id(2L)
            .customertype(2)
            .code("code2")
            .title("title2")
            .namewithinitials("namewithinitials2")
            .fullname("fullname2")
            .callingname("callingname2")
            .nicno("nicno2")
            .bloodgroup("bloodgroup2")
            .gender("gender2")
            .maritalstatus("maritalstatus2")
            .nationality(2)
            .territory("territory2")
            .religion(2)
            .team("team2")
            .businessname("businessname2")
            .businessregno("businessregno2")
            .profilepicturepath("profilepicturepath2")
            .residencehouseno("residencehouseno2")
            .residenceaddress("residenceaddress2")
            .residencecity("residencecity2")
            .residencephone("residencephone2")
            .businesslocationno("businesslocationno2")
            .businessaddress("businessaddress2")
            .businesscity("businesscity2")
            .businessphone1("businessphone12")
            .businessphone2("businessphone22")
            .businessmobile("businessmobile2")
            .businessfax("businessfax2")
            .businessemail("businessemail2")
            .businessprovinceid(2)
            .businessdistrictid(2)
            .contactpersonname("contactpersonname2")
            .contactpersonphone("contactpersonphone2")
            .contactpersonmobile("contactpersonmobile2")
            .contactpersonemail("contactpersonemail2")
            .rootmappath("rootmappath2")
            .website("website2")
            .isactive(2)
            .isinternalcustomer(2)
            .description("description2")
            .lmu(2)
            .creditpaymentbydays(2)
            .customerrootmappath("customerrootmappath2")
            .employername("employername2")
            .employeraddress("employeraddress2")
            .employerphone("employerphone2")
            .employerdesignation("employerdesignation2")
            .previousemployername("previousemployername2")
            .previousemployeraddress("previousemployeraddress2")
            .previousindustry("previousindustry2")
            .previousperiod("previousperiod2")
            .previouspositions("previouspositions2")
            .previousresionforleaving("previousresionforleaving2")
            .accountid(2)
            .accountcode("accountcode2")
            .vatregnumber("vatregnumber2")
            .tinnumber("tinnumber2")
            .lat("lat2")
            .lon("lon2")
            .creditperiod(2);
    }

    public static Customer getCustomerRandomSampleGenerator() {
        return new Customer()
            .id(longCount.incrementAndGet())
            .customertype(intCount.incrementAndGet())
            .code(UUID.randomUUID().toString())
            .title(UUID.randomUUID().toString())
            .namewithinitials(UUID.randomUUID().toString())
            .fullname(UUID.randomUUID().toString())
            .callingname(UUID.randomUUID().toString())
            .nicno(UUID.randomUUID().toString())
            .bloodgroup(UUID.randomUUID().toString())
            .gender(UUID.randomUUID().toString())
            .maritalstatus(UUID.randomUUID().toString())
            .nationality(intCount.incrementAndGet())
            .territory(UUID.randomUUID().toString())
            .religion(intCount.incrementAndGet())
            .team(UUID.randomUUID().toString())
            .businessname(UUID.randomUUID().toString())
            .businessregno(UUID.randomUUID().toString())
            .profilepicturepath(UUID.randomUUID().toString())
            .residencehouseno(UUID.randomUUID().toString())
            .residenceaddress(UUID.randomUUID().toString())
            .residencecity(UUID.randomUUID().toString())
            .residencephone(UUID.randomUUID().toString())
            .businesslocationno(UUID.randomUUID().toString())
            .businessaddress(UUID.randomUUID().toString())
            .businesscity(UUID.randomUUID().toString())
            .businessphone1(UUID.randomUUID().toString())
            .businessphone2(UUID.randomUUID().toString())
            .businessmobile(UUID.randomUUID().toString())
            .businessfax(UUID.randomUUID().toString())
            .businessemail(UUID.randomUUID().toString())
            .businessprovinceid(intCount.incrementAndGet())
            .businessdistrictid(intCount.incrementAndGet())
            .contactpersonname(UUID.randomUUID().toString())
            .contactpersonphone(UUID.randomUUID().toString())
            .contactpersonmobile(UUID.randomUUID().toString())
            .contactpersonemail(UUID.randomUUID().toString())
            .rootmappath(UUID.randomUUID().toString())
            .website(UUID.randomUUID().toString())
            .isactive(intCount.incrementAndGet())
            .isinternalcustomer(intCount.incrementAndGet())
            .description(UUID.randomUUID().toString())
            .lmu(intCount.incrementAndGet())
            .creditpaymentbydays(intCount.incrementAndGet())
            .customerrootmappath(UUID.randomUUID().toString())
            .employername(UUID.randomUUID().toString())
            .employeraddress(UUID.randomUUID().toString())
            .employerphone(UUID.randomUUID().toString())
            .employerdesignation(UUID.randomUUID().toString())
            .previousemployername(UUID.randomUUID().toString())
            .previousemployeraddress(UUID.randomUUID().toString())
            .previousindustry(UUID.randomUUID().toString())
            .previousperiod(UUID.randomUUID().toString())
            .previouspositions(UUID.randomUUID().toString())
            .previousresionforleaving(UUID.randomUUID().toString())
            .accountid(intCount.incrementAndGet())
            .accountcode(UUID.randomUUID().toString())
            .vatregnumber(UUID.randomUUID().toString())
            .tinnumber(UUID.randomUUID().toString())
            .lat(UUID.randomUUID().toString())
            .lon(UUID.randomUUID().toString())
            .creditperiod(intCount.incrementAndGet());
    }
}
