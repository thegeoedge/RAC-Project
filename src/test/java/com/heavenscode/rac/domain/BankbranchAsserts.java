package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BankbranchAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBankbranchAllPropertiesEquals(Bankbranch expected, Bankbranch actual) {
        assertBankbranchAutoGeneratedPropertiesEquals(expected, actual);
        assertBankbranchAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBankbranchAllUpdatablePropertiesEquals(Bankbranch expected, Bankbranch actual) {
        assertBankbranchUpdatableFieldsEquals(expected, actual);
        assertBankbranchUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBankbranchAutoGeneratedPropertiesEquals(Bankbranch expected, Bankbranch actual) {
        assertThat(expected)
            .as("Verify Bankbranch auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBankbranchUpdatableFieldsEquals(Bankbranch expected, Bankbranch actual) {
        assertThat(expected)
            .as("Verify Bankbranch relevant properties")
            .satisfies(e -> assertThat(e.getBankcode()).as("check bankcode").isEqualTo(actual.getBankcode()))
            .satisfies(e -> assertThat(e.getBranchcode()).as("check branchcode").isEqualTo(actual.getBranchcode()))
            .satisfies(e -> assertThat(e.getBranchname()).as("check branchname").isEqualTo(actual.getBranchname()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBankbranchUpdatableRelationshipsEquals(Bankbranch expected, Bankbranch actual) {}
}
