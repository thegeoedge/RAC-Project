package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AutocareservicemillagesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutocareservicemillagesAllPropertiesEquals(Autocareservicemillages expected, Autocareservicemillages actual) {
        assertAutocareservicemillagesAutoGeneratedPropertiesEquals(expected, actual);
        assertAutocareservicemillagesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutocareservicemillagesAllUpdatablePropertiesEquals(
        Autocareservicemillages expected,
        Autocareservicemillages actual
    ) {
        assertAutocareservicemillagesUpdatableFieldsEquals(expected, actual);
        assertAutocareservicemillagesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutocareservicemillagesAutoGeneratedPropertiesEquals(
        Autocareservicemillages expected,
        Autocareservicemillages actual
    ) {
        assertThat(expected)
            .as("Verify Autocareservicemillages auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutocareservicemillagesUpdatableFieldsEquals(
        Autocareservicemillages expected,
        Autocareservicemillages actual
    ) {
        assertThat(expected)
            .as("Verify Autocareservicemillages relevant properties")
            .satisfies(e -> assertThat(e.getMillage()).as("check millage").isEqualTo(actual.getMillage()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutocareservicemillagesUpdatableRelationshipsEquals(
        Autocareservicemillages expected,
        Autocareservicemillages actual
    ) {}
}
