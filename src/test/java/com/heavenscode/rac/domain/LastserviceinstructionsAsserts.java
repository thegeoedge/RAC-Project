package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LastserviceinstructionsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLastserviceinstructionsAllPropertiesEquals(Lastserviceinstructions expected, Lastserviceinstructions actual) {
        assertLastserviceinstructionsAutoGeneratedPropertiesEquals(expected, actual);
        assertLastserviceinstructionsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLastserviceinstructionsAllUpdatablePropertiesEquals(
        Lastserviceinstructions expected,
        Lastserviceinstructions actual
    ) {
        assertLastserviceinstructionsUpdatableFieldsEquals(expected, actual);
        assertLastserviceinstructionsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLastserviceinstructionsAutoGeneratedPropertiesEquals(
        Lastserviceinstructions expected,
        Lastserviceinstructions actual
    ) {
        assertThat(expected)
            .as("Verify Lastserviceinstructions auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLastserviceinstructionsUpdatableFieldsEquals(
        Lastserviceinstructions expected,
        Lastserviceinstructions actual
    ) {
        assertThat(expected)
            .as("Verify Lastserviceinstructions relevant properties")
            .satisfies(e -> assertThat(e.getJobid()).as("check jobid").isEqualTo(actual.getJobid()))
            .satisfies(e -> assertThat(e.getInstruction()).as("check instruction").isEqualTo(actual.getInstruction()))
            .satisfies(e -> assertThat(e.getIsactive()).as("check isactive").isEqualTo(actual.getIsactive()))
            .satisfies(e -> assertThat(e.getLmu()).as("check lmu").isEqualTo(actual.getLmu()))
            .satisfies(e -> assertThat(e.getLmd()).as("check lmd").isEqualTo(actual.getLmd()))
            .satisfies(e -> assertThat(e.getIgnore()).as("check ignore").isEqualTo(actual.getIgnore()))
            .satisfies(e -> assertThat(e.getVehicleid()).as("check vehicleid").isEqualTo(actual.getVehicleid()))
            .satisfies(e -> assertThat(e.getVehicleno()).as("check vehicleno").isEqualTo(actual.getVehicleno()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLastserviceinstructionsUpdatableRelationshipsEquals(
        Lastserviceinstructions expected,
        Lastserviceinstructions actual
    ) {}
}
