package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WorkshopvehicleworkAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkshopvehicleworkAllPropertiesEquals(Workshopvehiclework expected, Workshopvehiclework actual) {
        assertWorkshopvehicleworkAutoGeneratedPropertiesEquals(expected, actual);
        assertWorkshopvehicleworkAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkshopvehicleworkAllUpdatablePropertiesEquals(Workshopvehiclework expected, Workshopvehiclework actual) {
        assertWorkshopvehicleworkUpdatableFieldsEquals(expected, actual);
        assertWorkshopvehicleworkUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkshopvehicleworkAutoGeneratedPropertiesEquals(Workshopvehiclework expected, Workshopvehiclework actual) {
        assertThat(expected)
            .as("Verify Workshopvehiclework auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkshopvehicleworkUpdatableFieldsEquals(Workshopvehiclework expected, Workshopvehiclework actual) {
        assertThat(expected)
            .as("Verify Workshopvehiclework relevant properties")
            .satisfies(e -> assertThat(e.getJobid()).as("check jobid").isEqualTo(actual.getJobid()))
            .satisfies(e -> assertThat(e.getVehicleid()).as("check vehicleid").isEqualTo(actual.getVehicleid()))
            .satisfies(e -> assertThat(e.getCustomerid()).as("check customerid").isEqualTo(actual.getCustomerid()))
            .satisfies(e -> assertThat(e.getCustomername()).as("check customername").isEqualTo(actual.getCustomername()))
            .satisfies(e -> assertThat(e.getContactno()).as("check contactno").isEqualTo(actual.getContactno()))
            .satisfies(e -> assertThat(e.getVehicleno()).as("check vehicleno").isEqualTo(actual.getVehicleno()))
            .satisfies(e -> assertThat(e.getVehiclebrand()).as("check vehiclebrand").isEqualTo(actual.getVehiclebrand()))
            .satisfies(e -> assertThat(e.getVehiclemodel()).as("check vehiclemodel").isEqualTo(actual.getVehiclemodel()))
            .satisfies(e -> assertThat(e.getMileage()).as("check mileage").isEqualTo(actual.getMileage()))
            .satisfies(e -> assertThat(e.getAddeddate()).as("check addeddate").isEqualTo(actual.getAddeddate()))
            .satisfies(e -> assertThat(e.getIscalltocustomer()).as("check iscalltocustomer").isEqualTo(actual.getIscalltocustomer()))
            .satisfies(e -> assertThat(e.getRemarks()).as("check remarks").isEqualTo(actual.getRemarks()))
            .satisfies(e -> assertThat(e.getCalldate()).as("check calldate").isEqualTo(actual.getCalldate()))
            .satisfies(e -> assertThat(e.getLmu()).as("check lmu").isEqualTo(actual.getLmu()))
            .satisfies(e -> assertThat(e.getLmd()).as("check lmd").isEqualTo(actual.getLmd()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkshopvehicleworkUpdatableRelationshipsEquals(Workshopvehiclework expected, Workshopvehiclework actual) {}
}
