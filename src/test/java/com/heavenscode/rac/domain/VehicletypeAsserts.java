package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VehicletypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicletypeAllPropertiesEquals(Vehicletype expected, Vehicletype actual) {
        assertVehicletypeAutoGeneratedPropertiesEquals(expected, actual);
        assertVehicletypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicletypeAllUpdatablePropertiesEquals(Vehicletype expected, Vehicletype actual) {
        assertVehicletypeUpdatableFieldsEquals(expected, actual);
        assertVehicletypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicletypeAutoGeneratedPropertiesEquals(Vehicletype expected, Vehicletype actual) {
        assertThat(expected)
            .as("Verify Vehicletype auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicletypeUpdatableFieldsEquals(Vehicletype expected, Vehicletype actual) {
        assertThat(expected)
            .as("Verify Vehicletype relevant properties")
            .satisfies(e -> assertThat(e.getVehicletype()).as("check vehicletype").isEqualTo(actual.getVehicletype()))
            .satisfies(
                e ->
                    assertThat(e.getVehicletypediscription())
                        .as("check vehicletypediscription")
                        .isEqualTo(actual.getVehicletypediscription())
            )
            .satisfies(e -> assertThat(e.getLmu()).as("check lmu").isEqualTo(actual.getLmu()))
            .satisfies(e -> assertThat(e.getLmd()).as("check lmd").isEqualTo(actual.getLmd()))
            .satisfies(e -> assertThat(e.getCatid()).as("check catid").isEqualTo(actual.getCatid()))
            .satisfies(e -> assertThat(e.getCatname()).as("check catname").isEqualTo(actual.getCatname()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicletypeUpdatableRelationshipsEquals(Vehicletype expected, Vehicletype actual) {}
}
