package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BillingserviceoptionvaluesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBillingserviceoptionvaluesAllPropertiesEquals(
        Billingserviceoptionvalues expected,
        Billingserviceoptionvalues actual
    ) {
        assertBillingserviceoptionvaluesAutoGeneratedPropertiesEquals(expected, actual);
        assertBillingserviceoptionvaluesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBillingserviceoptionvaluesAllUpdatablePropertiesEquals(
        Billingserviceoptionvalues expected,
        Billingserviceoptionvalues actual
    ) {
        assertBillingserviceoptionvaluesUpdatableFieldsEquals(expected, actual);
        assertBillingserviceoptionvaluesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBillingserviceoptionvaluesAutoGeneratedPropertiesEquals(
        Billingserviceoptionvalues expected,
        Billingserviceoptionvalues actual
    ) {
        assertThat(expected)
            .as("Verify Billingserviceoptionvalues auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBillingserviceoptionvaluesUpdatableFieldsEquals(
        Billingserviceoptionvalues expected,
        Billingserviceoptionvalues actual
    ) {
        assertThat(expected)
            .as("Verify Billingserviceoptionvalues relevant properties")
            .satisfies(e -> assertThat(e.getVehicletypeid()).as("check vehicletypeid").isEqualTo(actual.getVehicletypeid()))
            .satisfies(
                e ->
                    assertThat(e.getBillingserviceoptionid())
                        .as("check billingserviceoptionid")
                        .isEqualTo(actual.getBillingserviceoptionid())
            )
            .satisfies(e -> assertThat(e.getValue()).as("check value").isEqualTo(actual.getValue()))
            .satisfies(e -> assertThat(e.getLmd()).as("check lmd").isEqualTo(actual.getLmd()))
            .satisfies(e -> assertThat(e.getLmu()).as("check lmu").isEqualTo(actual.getLmu()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBillingserviceoptionvaluesUpdatableRelationshipsEquals(
        Billingserviceoptionvalues expected,
        Billingserviceoptionvalues actual
    ) {}
}
