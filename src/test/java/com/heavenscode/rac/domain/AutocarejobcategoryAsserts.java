package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AutocarejobcategoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutocarejobcategoryAllPropertiesEquals(Autocarejobcategory expected, Autocarejobcategory actual) {
        assertAutocarejobcategoryAutoGeneratedPropertiesEquals(expected, actual);
        assertAutocarejobcategoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutocarejobcategoryAllUpdatablePropertiesEquals(Autocarejobcategory expected, Autocarejobcategory actual) {
        assertAutocarejobcategoryUpdatableFieldsEquals(expected, actual);
        assertAutocarejobcategoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutocarejobcategoryAutoGeneratedPropertiesEquals(Autocarejobcategory expected, Autocarejobcategory actual) {
        assertThat(expected)
            .as("Verify Autocarejobcategory auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutocarejobcategoryUpdatableFieldsEquals(Autocarejobcategory expected, Autocarejobcategory actual) {
        assertThat(expected)
            .as("Verify Autocarejobcategory relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getLmu()).as("check lmu").isEqualTo(actual.getLmu()))
            .satisfies(e -> assertThat(e.getLmd()).as("check lmd").isEqualTo(actual.getLmd()))
            .satisfies(e -> assertThat(e.getDisplayorder()).as("check displayorder").isEqualTo(actual.getDisplayorder()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutocarejobcategoryUpdatableRelationshipsEquals(Autocarejobcategory expected, Autocarejobcategory actual) {}
}
