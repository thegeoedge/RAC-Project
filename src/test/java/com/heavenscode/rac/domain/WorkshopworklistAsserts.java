package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WorkshopworklistAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkshopworklistAllPropertiesEquals(Workshopworklist expected, Workshopworklist actual) {
        assertWorkshopworklistAutoGeneratedPropertiesEquals(expected, actual);
        assertWorkshopworklistAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkshopworklistAllUpdatablePropertiesEquals(Workshopworklist expected, Workshopworklist actual) {
        assertWorkshopworklistUpdatableFieldsEquals(expected, actual);
        assertWorkshopworklistUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkshopworklistAutoGeneratedPropertiesEquals(Workshopworklist expected, Workshopworklist actual) {
        assertThat(expected)
            .as("Verify Workshopworklist auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkshopworklistUpdatableFieldsEquals(Workshopworklist expected, Workshopworklist actual) {
        assertThat(expected)
            .as("Verify Workshopworklist relevant properties")
            .satisfies(e -> assertThat(e.getWorkshopwork()).as("check workshopwork").isEqualTo(actual.getWorkshopwork()))
            .satisfies(
                e ->
                    assertThat(e.getWorkshopworkdescription())
                        .as("check workshopworkdescription")
                        .isEqualTo(actual.getWorkshopworkdescription())
            )
            .satisfies(e -> assertThat(e.getIsactive()).as("check isactive").isEqualTo(actual.getIsactive()))
            .satisfies(e -> assertThat(e.getLmd()).as("check lmd").isEqualTo(actual.getLmd()))
            .satisfies(e -> assertThat(e.getLmu()).as("check lmu").isEqualTo(actual.getLmu()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkshopworklistUpdatableRelationshipsEquals(Workshopworklist expected, Workshopworklist actual) {}
}
