package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AutojobsinvoiceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsinvoiceAllPropertiesEquals(Autojobsinvoice expected, Autojobsinvoice actual) {
        assertAutojobsinvoiceAutoGeneratedPropertiesEquals(expected, actual);
        assertAutojobsinvoiceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsinvoiceAllUpdatablePropertiesEquals(Autojobsinvoice expected, Autojobsinvoice actual) {
        assertAutojobsinvoiceUpdatableFieldsEquals(expected, actual);
        assertAutojobsinvoiceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsinvoiceAutoGeneratedPropertiesEquals(Autojobsinvoice expected, Autojobsinvoice actual) {
        assertThat(expected)
            .as("Verify Autojobsinvoice auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsinvoiceUpdatableFieldsEquals(Autojobsinvoice expected, Autojobsinvoice actual) {
        assertThat(expected)
            .as("Verify Autojobsinvoice relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getInvoicedate()).as("check invoicedate").isEqualTo(actual.getInvoicedate()))
            .satisfies(e -> assertThat(e.getCreateddate()).as("check createddate").isEqualTo(actual.getCreateddate()))
            .satisfies(e -> assertThat(e.getJobid()).as("check jobid").isEqualTo(actual.getJobid()))
            .satisfies(e -> assertThat(e.getQuoteid()).as("check quoteid").isEqualTo(actual.getQuoteid()))
            .satisfies(e -> assertThat(e.getOrderid()).as("check orderid").isEqualTo(actual.getOrderid()))
            .satisfies(e -> assertThat(e.getDelieverydate()).as("check delieverydate").isEqualTo(actual.getDelieverydate()))
            .satisfies(e -> assertThat(e.getAutojobsrepid()).as("check autojobsrepid").isEqualTo(actual.getAutojobsrepid()))
            .satisfies(e -> assertThat(e.getAutojobsrepname()).as("check autojobsrepname").isEqualTo(actual.getAutojobsrepname()))
            .satisfies(e -> assertThat(e.getDelieverfrom()).as("check delieverfrom").isEqualTo(actual.getDelieverfrom()))
            .satisfies(e -> assertThat(e.getCustomerid()).as("check customerid").isEqualTo(actual.getCustomerid()))
            .satisfies(e -> assertThat(e.getCustomername()).as("check customername").isEqualTo(actual.getCustomername()))
            .satisfies(e -> assertThat(e.getCustomeraddress()).as("check customeraddress").isEqualTo(actual.getCustomeraddress()))
            .satisfies(e -> assertThat(e.getDeliveryaddress()).as("check deliveryaddress").isEqualTo(actual.getDeliveryaddress()))
            .satisfies(e -> assertThat(e.getSubtotal()).as("check subtotal").isEqualTo(actual.getSubtotal()))
            .satisfies(e -> assertThat(e.getTotaltax()).as("check totaltax").isEqualTo(actual.getTotaltax()))
            .satisfies(e -> assertThat(e.getTotaldiscount()).as("check totaldiscount").isEqualTo(actual.getTotaldiscount()))
            .satisfies(e -> assertThat(e.getNettotal()).as("check nettotal").isEqualTo(actual.getNettotal()))
            .satisfies(e -> assertThat(e.getMessage()).as("check message").isEqualTo(actual.getMessage()))
            .satisfies(e -> assertThat(e.getLmu()).as("check lmu").isEqualTo(actual.getLmu()))
            .satisfies(e -> assertThat(e.getLmd()).as("check lmd").isEqualTo(actual.getLmd()))
            .satisfies(e -> assertThat(e.getPaidamount()).as("check paidamount").isEqualTo(actual.getPaidamount()))
            .satisfies(e -> assertThat(e.getAmountowing()).as("check amountowing").isEqualTo(actual.getAmountowing()))
            .satisfies(e -> assertThat(e.getIsactive()).as("check isactive").isEqualTo(actual.getIsactive()))
            .satisfies(e -> assertThat(e.getLocationid()).as("check locationid").isEqualTo(actual.getLocationid()))
            .satisfies(e -> assertThat(e.getLocationcode()).as("check locationcode").isEqualTo(actual.getLocationcode()))
            .satisfies(e -> assertThat(e.getReferencecode()).as("check referencecode").isEqualTo(actual.getReferencecode()))
            .satisfies(e -> assertThat(e.getCreatedbyid()).as("check createdbyid").isEqualTo(actual.getCreatedbyid()))
            .satisfies(e -> assertThat(e.getCreatedbyname()).as("check createdbyname").isEqualTo(actual.getCreatedbyname()))
            .satisfies(e -> assertThat(e.getAutocarecompanyid()).as("check autocarecompanyid").isEqualTo(actual.getAutocarecompanyid()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsinvoiceUpdatableRelationshipsEquals(Autojobsinvoice expected, Autojobsinvoice actual) {}
}
