package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VehiclecategoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehiclecategoryAllPropertiesEquals(Vehiclecategory expected, Vehiclecategory actual) {
        assertVehiclecategoryAutoGeneratedPropertiesEquals(expected, actual);
        assertVehiclecategoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehiclecategoryAllUpdatablePropertiesEquals(Vehiclecategory expected, Vehiclecategory actual) {
        assertVehiclecategoryUpdatableFieldsEquals(expected, actual);
        assertVehiclecategoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehiclecategoryAutoGeneratedPropertiesEquals(Vehiclecategory expected, Vehiclecategory actual) {
        assertThat(expected)
            .as("Verify Vehiclecategory auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehiclecategoryUpdatableFieldsEquals(Vehiclecategory expected, Vehiclecategory actual) {
        assertThat(expected)
            .as("Verify Vehiclecategory relevant properties")
            .satisfies(e -> assertThat(e.getVehiclecategory()).as("check vehiclecategory").isEqualTo(actual.getVehiclecategory()))
            .satisfies(
                e ->
                    assertThat(e.getVehiclecategorydiscription())
                        .as("check vehiclecategorydiscription")
                        .isEqualTo(actual.getVehiclecategorydiscription())
            )
            .satisfies(e -> assertThat(e.getLmu()).as("check lmu").isEqualTo(actual.getLmu()))
            .satisfies(e -> assertThat(e.getLmd()).as("check lmd").isEqualTo(actual.getLmd()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehiclecategoryUpdatableRelationshipsEquals(Vehiclecategory expected, Vehiclecategory actual) {}
}
